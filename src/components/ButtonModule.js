import ButtonModuleColourInput from "./ButtonModuleColourInput";
import ButtonModuleTextInput from "./ButtonModuleTextInput";
import KtaneModule from "./KtaneModule";
import React from "react";
import "../css/ButtonModule.css";

export default class ButtonModule extends KtaneModule {
  static getTitle() {
    return "–ö–Ω–æ–ø–∫–∞";
  }

  constructor(props) {
    super(props);

    this.colourBlue = "blue";
    this.colourWhite = "white";
    this.colourYellow = "yellow";
    this.colourRed = "red";
    this.allColours = [this.colourBlue, this.colourWhite, this.colourYellow, this.colourRed];

    this.textAbort = "–ü–µ—Ä–µ—Ä–≤–∞—Ç–∏";
    this.textDetonate = "–ü—ñ–¥—ñ—Ä–≤–∞—Ç–∏";
    this.textHold = "–¢—Ä–∏–º–∞—Ç–∏";
    this.textPress = "–ù–∞—Ç–∏—Å–Ω—É—Ç–∏";
    this.allText = [this.textAbort, this.textDetonate, this.textHold, this.textPress];

    this.setColour = this.setColour.bind(this);
    this.setText = this.setText.bind(this);
  }

  getInstruction() {
    if (this.state.text === this.textDetonate) {
      return <>–Ø–∫—â–æ 2+ üîã, —à–≤–∏–¥–∫–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏.<br />–Ü–Ω–∞–∫—à–µ, –∑–∞—Ç–∏—Å–Ω—É—Ç–∏.</>;
    } else if (this.state.colour === this.colourWhite) {
      return <>
        –Ø–∫—â–æ <span className="litIndicator" title="Lit indicator">CAR</span>, –∑–∞—Ç–∏—Å–Ω—É—Ç–∏.<br />
        –í —ñ–Ω—à–æ–º—É —Ä–∞–∑—ñ, —è–∫—â–æ 3+ üîã —Ç–∞ <span className="litIndicator" title="Lit indicator">FRK</span>, —à–≤–∏–¥–∫–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏.<br />
        –í —ñ–Ω—à–æ–º—É —Ä–∞–∑—ñ, –∑–∞—Ç–∏—Å–Ω—É—Ç–∏.
      </>;
    } else if ((this.state.colour === this.colourBlue && this.state.text === this.textAbort) || this.state.colour === this.colourYellow) {
      return "–ó–∞—Ç–∏—Å–Ω—É—Ç–∏.";
    } else if (this.state.colour === this.colourRed && this.state.text === this.textHold) {
      return "–ù–∞—Ç–∏—Å–Ω—É—Ç–∏ —ñ –≤—ñ–¥–ø—É—Å—Ç–∏—Ç–∏.";
    } else {
      return <>
        –Ø–∫—â–æ 3+ üîã —Ç–∞ <span className="litIndicator" title="Lit indicator">FRK</span>, —à–≤–∏–¥–∫–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏.
        <br />–í —ñ–Ω—à–æ–º—É —Ä–∞–∑—ñ, –∑–∞—Ç–∏—Å–Ω—É—Ç–∏.
      </>;
    }
  }

  mainRender() {
    return (
      <>
        <div className="bigButton" style={{backgroundColor: this.state.colour}}>
          <span style={{color: [this.colourWhite, this.colourYellow].includes(this.state.colour) ? "black" : "white"}}>
            {this.state.text}
          </span>
        </div>

        <div>
          –ö–æ–ª—ñ—Ä:
          {
            this.allColours.map(colour => (
              <ButtonModuleColourInput
                key={colour}
                onChange={this.setColour}
                stateValue={this.state.colour}
                value={colour}
              />
            ))
          }
        </div>

        <div>
          –¢–µ–∫—Å—Ç:
          {
            this.allText.map(text => (
              <ButtonModuleTextInput
                key={text}
                onChange={this.setText}
                stateValue={this.state.text}
                value={text}
              />
            ))
          }
        </div>

        <div className="instruction">{this.getInstruction()}</div>

        <div>
          –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –∑–∞—Ç–∏—Å–Ω—É—Ç–∞, –≤—ñ–¥–ø—É—Å—Ç–∏—Ç–∏, –∫–æ–ª–∏ –Ω–∞ —Ç–∞–π–º–µ—Ä—ñ —î —Ü–∏—Ñ—Ä–∞, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∫–æ–ª—å–æ—Ä—É —Å–º—É–∂–∫–∏:
          <ul>
            <li><span className="button blue">–°–∏–Ω—è</span>: &nbsp; 4</li>
            <li><span className="button yellow">–ñ–æ–≤—Ç–∞</span>: 5</li>
            <li><span className="button">–Ü–Ω—à–µ</span>: &nbsp;1</li>
          </ul>
        </div>
      </>
    )
  }

  getInitialState() {
    // @TODO Put string literals into constants
    return {
      colour: this.colourBlue,
      text: this.textAbort
    };
  }

  setColour(event) {
    this.setState({colour: event.target.value});
  }

  setText(event) {
    this.setState({text: event.target.value});
  }
}
